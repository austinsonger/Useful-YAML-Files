samm_objectives:
- SAMM Objective: 'G-SM-A: Create and Promote'
  SSDF: 'RV.3.4: Review the SDLC process, and update it if appropriate to prevent (or reduce the likelihood of) the root cause recurring in updates to the software or in new software that is created.'
  ASVS: .nan
  NIST 800-53 v5 sections: ": PL-9 Central Management\n : PM-1 Information Security Program Plan\n : PM-12 Insider Threat Program\n : PM-14 Testing, Training, and Monitoring\n : PM-26 Complaint Management\n : PM-32 Purposing\n : PM-4 Plan of Action and Milestones Process\n : SC-1 Policy and Procedures\n : SI-1 Policy and Procedures"
  ISO 27001: "5.1: Acceptable use of information and other associated assets\n 5.1: Policies for information security\n 5.8: Information security in project management"
  Cloud Controls Matrix: 'AIS-01: Application and Interface Security Policy and Procedures'
- SAMM Objective: 'G-SM-B: Measure and Improve'
  SSDF: 'RV.3.4: Review the SDLC process, and update it if appropriate to prevent (or reduce the likelihood of) the root cause recurring in updates to the software or in new software that is created.'
  ASVS: .nan
  NIST 800-53 v5 sections: ": PL-9 Central Management\n : PM-1 Information Security Program Plan\n : PM-12 Insider Threat Program\n : PM-14 Testing, Training, and Monitoring\n : PM-26 Complaint Management\n : PM-32 Purposing\n : PM-4 Plan of Action and Milestones Process\n : SC-1 Policy and Procedures\n : SI-1 Policy and Procedures"
  ISO 27001: "5.1: Acceptable use of information and other associated assets\n 5.1: Policies for information security\n 5.8: Information security in project management"
  Cloud Controls Matrix: 'AIS-01: Application and Interface Security Policy and Procedures'
- SAMM Objective: 'G-PC-A: Policy and Standards'
  SSDF: 'PO.1.2: Identify and document all security requirements for organization-developed software to meet, and maintain the requirements over time.'
  ASVS: 'V1.5.1: Verify that input and output requirements clearly define how to handle and process data based on type, content, and applicable laws, regulations, and other policy compliance.'
  NIST 800-53 v5 sections: ": PM-17 Protecting Controlled Unclassified Information on External Systems\n : PM-23 Data Governance Body\n : PM-7 Enterprise Architecture\n : SC-18 Mobile Code"
  ISO 27001: "5.14: Information transfer\n 5.31: Legal, statutory, regulatory and contractual requirements\n 5.35: Independent review of information security\n 5.36: Compliance with policies, rules and standards for information security\n 5.5: Contact with authorities\n 8.1: Information deletion\n 8.26: Application security requirements"
  Cloud Controls Matrix: "AIS-02: Application Security Baseline Requirements\n GRC: Governance, Risk and Compliance"
- SAMM Objective: 'G-PC-B: Compliance Management'
  SSDF: "PO.1.2: Identify and document all security requirements for organization-developed software to meet, and maintain the requirements over time.\n PO.3.3: Configure tools to generate artifacts of their support of secure software development practices as defined by the organization."
  ASVS: .nan
  NIST 800-53 v5 sections: ": AU-13 Monitoring for Information Disclosure\n : AU-14 Session Audit\n : CA-1 Policy and Procedures\n : CA-2 Control Assessments\n : CA-5 Plan of Action and Milestones\n : CA-6 Authorization\n : CA-7 Continuous Monitoring\n : CA-8 Penetration Testing\n : PM-31 Continuous Monitoring Strategy\n : PM-6 Measures of Performance\n : SC-18 Mobile Code\n : SI-20 Tainting\n : SI-5 Security Alerts, Advisories, and Directives"
  ISO 27001: "5.14: Information transfer\n 5.35: Independent review of information security\n 5.36: Compliance with policies, rules and standards for information security\n 5.5: Contact with authorities\n 8.26: Application security requirements\n 8.34: Protection of information systems during audit testing"
  Cloud Controls Matrix: "A&A: Audit & Assurance\n AIS-02: Application Security Baseline Requirements\n AIS-03: Application Security Metrics"
- SAMM Objective: 'G-EG-A: Training and Awareness'
  SSDF: 'PO.2.2: Provide role-based training for all personnel with responsibilities that contribute to secure development. Periodically review personnel proficiency and role-based training, and update the training as needed.'
  ASVS: 'V1.1.1: Verify the use of a secure software development lifecycle that addresses security in all stages of development.'
  NIST 800-53 v5 sections: ": AT-1 Policy and Procedures\n : AT-2 Literacy Training and Awareness\n : AT-3 Role-based Training\n : AT-4 Training Records\n : AT-6 Training Feedback\n : SA-15 Development Process, Standards, and Tools\n : SA-16 Developer-provided Training\n : SA-3 System Development Life Cycle\n : SA-8 Security and Privacy Engineering Principles\n : SI-3 Malicious Code Protection"
  ISO 27001: "6.3: Information security awareness, education and training\n 8.25: Secure development life cycle"
  Cloud Controls Matrix: 'AIS-04: Secure Application Design and Development'
- SAMM Objective: 'G-EG-B: Organization and Culture'
  SSDF: 'PO.2.1: Create new roles and alter responsibilities for existing roles as needed to encompass all parts of the SDLC. Periodically review and maintain the defined roles and responsibilities, updating them as needed.'
  ASVS: .nan
  NIST 800-53 v5 sections: ": PL-9 Central Management\n : PM-1 Information Security Program Plan\n : PM-12 Insider Threat Program\n : PM-13 Security and Privacy Workforce\n : PM-14 Testing, Training, and Monitoring\n : PM-2 Information Security Program Leadership Role\n : PM-26 Complaint Management\n : PM-29 Risk Management Program Leadership Roles\n : PM-32 Purposing\n : PM-4 Plan of Action and Milestones Process\n : SC-1 Policy and Procedures\n : SI-1 Policy and Procedures"
  ISO 27001: "5.1: Acceptable use of information and other associated assets\n 5.1: Policies for information security\n 5.2: Information security roles and responsibilities\n 5.8: Information security in project management"
  Cloud Controls Matrix: 'AIS-01: Application and Interface Security Policy and Procedures'
- SAMM Objective: 'D-TA-A: Application Risk Profile'
  SSDF: "PO.1.3: Communicate requirements to all third parties who will provide commercial software components to the organization for reuse by the organization\u2019s own software. [Formerly PW.3.1]\n PW.1.1: Use forms of risk modeling \u2013 such as threat modeling, attack modeling, or attack surface mapping \u2013 to help assess the security risk for the software.\n PW.4.1: Acquire and maintain well-secured software components (e.g., software libraries, modules, middleware, frameworks) from commercial, open- source, and other third-party developers for use by the organization\u2019s software.\n PW.4.4: Verify that acquired commercial, open-source, and all other third-party software components comply with the requirements, as defined by the organization, throughout their life cycles"
  ASVS: "V1.1.5: Verify definition and security analysis of the application's high-level architecture and all connected remote services.\n V11.1.5: Verify the application has business logic limits or validation to protect against likely business risks or threats, identified using threat modeling or similar methodologies."
  NIST 800-53 v5 sections: ": PM-11 Mission and Business Process Definition\n : PM-16 Threat Awareness Program\n : PM-28 Risk Framing\n : PM-30 Supply Chain Risk Management Strategy\n : PM-7 Enterprise Architecture\n : PM-8 Critical Infrastructure Plan\n : PM-9 Risk Management Strategy\n : RA-1 Policy and Procedures\n : RA-10 Threat Hunting\n : RA-2 Security Categorization\n : RA-3 Risk Assessment\n : RA-5 Vulnerability Monitoring and Scanning\n : RA-6 Technical Surveillance Countermeasures Survey\n : RA-7 Risk Response\n : RA-8 Privacy Impact Assessments\n : RA-9 Criticality Analysis\n : SA-1 Policy and Procedures\n : SA-22 Unsupported System Components\n : SA-4 Acquisition Process\n : SA-9 External System Services\n : SC-31 Covert Channel Analysis\n : SR-1 Policy and Procedures\n : SR-10 Inspection of Systems or Components\n : SR-11 Component Authenticity\n : SR-12 Component Disposal\n : SR-2 Supply Chain Risk Management Plan\n : SR-3 Supply Chain Controls and Processes\n : SR-4 Provenance\n : SR-5 Acquisition Strategies, Tools, and Methods\n : SR-6 Supplier Assessments and Reviews\n : SR-7 Supply Chain Operations Security\n : SR-8 Notification Agreements\n : SR-9 Tamper Resistance and Detection"
  ISO 27001: "5.19: Information security in supplier relationships\n 5.21: Managing information security in the information and communication technology (ICT) supply chain\n 5.22: Monitoring, review and change management of supplier services\n 5.23: Information security for use of cloud services\n 5.2: Addressing information security within supplier agreements\n 5.7: Threat intelligence\n 8.3: Outsourced development"
  Cloud Controls Matrix: 'GRC: Governance, Risk and Compliance'
- SAMM Objective: 'D-TA-B: Threat Modeling'
  SSDF: "PW.1.1: Use forms of risk modeling \u2013 such as threat modeling, attack modeling, or attack surface mapping \u2013 to help assess the security risk for the software."
  ASVS: "V1.1.1: Verify the use of a secure software development lifecycle that addresses security in all stages of development.\n V1.1.5: Verify definition and security analysis of the application's high-level architecture and all connected remote services."
  NIST 800-53 v5 sections: ": PL-8 SECURITY AND PRIVACY ARCHITECTURES\n : PM-11 Mission and Business Process Definition\n : PM-28 Risk Framing\n : PM-8 Critical Infrastructure Plan\n : PM-9 Risk Management Strategy\n : RA-1 Policy and Procedures\n : RA-2 Security Categorization\n : RA-3 Risk Assessment\n : RA-5 Vulnerability Monitoring and Scanning\n : RA-6 Technical Surveillance Countermeasures Survey\n : RA-7 Risk Response\n : RA-8 Privacy Impact Assessments\n : RA-9 Criticality Analysis\n : SA-15 Development Process, Standards, and Tools\n : SA-17 Developer Security and Privacy Architecture and Design\n : SA-20 Customized Development of Critical Components\n : SA-23 Specialization\n : SA-3 System Development Life Cycle\n : SA-8 Security and Privacy Engineering Principles\n : SC-27 Platform-independent Applications\n : SC-29 Heterogeneity\n : SC-31 Covert Channel Analysis\n : SI-3 Malicious Code Protection"
  ISO 27001: "8.25: Secure development life cycle\n 8.27: Secure system architecture and engineering principles"
  Cloud Controls Matrix: 'AIS-04: Secure Application Design and Development'
- SAMM Objective: 'D-SR-A: Software Requirements'
  SSDF: 'PO.1.2: Identify and document all security requirements for organization-developed software to meet, and maintain the requirements over time.'
  ASVS: 'V1.5.1: Verify that input and output requirements clearly define how to handle and process data based on type, content, and applicable laws, regulations, and other policy compliance.'
  NIST 800-53 v5 sections: ": PM-17 Protecting Controlled Unclassified Information on External Systems\n : PM-23 Data Governance Body\n : PM-7 Enterprise Architecture\n : SC-18 Mobile Code"
  ISO 27001: "5.14: Information transfer\n 5.31: Legal, statutory, regulatory and contractual requirements\n 5.35: Independent review of information security\n 5.36: Compliance with policies, rules and standards for information security\n 5.5: Contact with authorities\n 8.1: Information deletion\n 8.26: Application security requirements"
  Cloud Controls Matrix: "AIS-02: Application Security Baseline Requirements\n GRC: Governance, Risk and Compliance"
- SAMM Objective: 'D-SR-B: Supplier Security'
  SSDF: "PO.1.3: Communicate requirements to all third parties who will provide commercial software components to the organization for reuse by the organization\u2019s own software. [Formerly PW.3.1]\n PO.4.1: Define criteria for software security checks and track throughout the SDLC.\n PO.4.2: Implement processes, mechanisms, etc. to gather and safeguard the necessary information in support of the criteria.\n PS.2.1: Make software integrity verification information available to software acquirers.\n PW.4.1: Acquire and maintain well-secured software components (e.g., software libraries, modules, middleware, frameworks) from commercial, open- source, and other third-party developers for use by the organization\u2019s software.\n PW.4.4: Verify that acquired commercial, open-source, and all other third-party software components comply with the requirements, as defined by the organization, throughout their life cycles\n RV.1.1: Gather information from software acquirers, users, and public sources on potential vulnerabilities in the software and third-party components that the software uses, and investigate all credible reports.\n RV.1.2: Review, analyze, and/or test the software\u2019s code to identify or confirm the presence of previously undetected vulnerabilities."
  ASVS: "V1.1.1: Verify the use of a secure software development lifecycle that addresses security in all stages of development.\n V1.14.6: Verify the application does not use unsupported, insecure, or deprecated client-side technologies such as NSAPI plugins, Flash, Shockwave, ActiveX, Silverlight, NACL, or client-side Java applets.\n V10.2.6: Verify that the application source code and third party libraries do not contain Easter eggs or any other potentially unwanted functionality.\n V10.3.2: Verify that the application employs integrity protections, such as code signing or subresource integrity. The application must not load or execute code from untrusted sources, such as loading includes, modules, plugins, code, or libraries from untrusted sources or the Internet.\n V14.2.2: Verify that all unneeded features, documentation, sample applications and configurations are removed."
  NIST 800-53 v5 sections: ": PM-11 Mission and Business Process Definition\n : PM-28 Risk Framing\n : PM-30 Supply Chain Risk Management Strategy\n : PM-8 Critical Infrastructure Plan\n : PM-9 Risk Management Strategy\n : RA-1 Policy and Procedures\n : RA-2 Security Categorization\n : RA-3 Risk Assessment\n : RA-5 Vulnerability Monitoring and Scanning\n : RA-6 Technical Surveillance Countermeasures Survey\n : RA-7 Risk Response\n : RA-8 Privacy Impact Assessments\n : RA-9 Criticality Analysis\n : SA-1 Policy and Procedures\n : SA-11 Developer Testing and Evaluation\n : SA-15 Development Process, Standards, and Tools\n : SA-22 Unsupported System Components\n : SA-3 System Development Life Cycle\n : SA-4 Acquisition Process\n : SA-8 Security and Privacy Engineering Principles\n : SA-9 External System Services\n : SI-3 Malicious Code Protection\n : SR-1 Policy and Procedures\n : SR-10 Inspection of Systems or Components\n : SR-11 Component Authenticity\n : SR-12 Component Disposal\n : SR-2 Supply Chain Risk Management Plan\n : SR-3 Supply Chain Controls and Processes\n : SR-4 Provenance\n : SR-5 Acquisition Strategies, Tools, and Methods\n : SR-6 Supplier Assessments and Reviews\n : SR-7 Supply Chain Operations Security\n : SR-8 Notification Agreements\n : SR-9 Tamper Resistance and Detection"
  ISO 27001: "5.19: Information security in supplier relationships\n 5.21: Managing information security in the information and communication technology (ICT) supply chain\n 5.22: Monitoring, review and change management of supplier services\n 5.23: Information security for use of cloud services\n 5.2: Addressing information security within supplier agreements\n 8.25: Secure development life cycle\n 8.29: Security testing in development and acceptance\n 8.33: Test information\n 8.3: Outsourced development"
  Cloud Controls Matrix: "AIS-04: Secure Application Design and Development\n AIS-05: Automated Application Security Testing\n STA: Supply Chain Management, Transparency, and Accountability"
- SAMM Objective: 'D-SA-A: Architecture Design'
  SSDF: "PW.1.1: Use forms of risk modeling \u2013 such as threat modeling, attack modeling, or attack surface mapping \u2013 to help assess the security risk for the software.\n PW.2.1: Have 1) a qualified person (or people) who were not involved with the design and/or 2) automated processes instantiated in the toolchain review the software design to confirm and enforce that it meets all of the security requirements and satisfactorily addresses the identified risk information."
  ASVS: "V1.1.1: Verify the use of a secure software development lifecycle that addresses security in all stages of development.\n V1.1.5: Verify definition and security analysis of the application's high-level architecture and all connected remote services."
  NIST 800-53 v5 sections: ": PL-8 SECURITY AND PRIVACY ARCHITECTURES\n : SA-15 Development Process, Standards, and Tools\n : SA-17 Developer Security and Privacy Architecture and Design\n : SA-20 Customized Development of Critical Components\n : SA-23 Specialization\n : SA-3 System Development Life Cycle\n : SA-8 Security and Privacy Engineering Principles\n : SC-27 Platform-independent Applications\n : SC-29 Heterogeneity\n : SC-3 Security Function Isolation\n : SC-31 Covert Channel Analysis\n : SC-32 System Partitioning\n : SC-39 Process Isolation\n : SC-44 Detonation Chambers\n : SI-14 Non-persistence\n : SI-22 Information Diversity\n : SI-23 Information Fragmentation\n : SI-3 Malicious Code Protection\n : SI-6 Security and Privacy Function Verification\n : SI-7 Software, Firmware, and Information Integrity"
  ISO 27001: "8.25: Secure development life cycle\n 8.27: Secure system architecture and engineering principles"
  Cloud Controls Matrix: 'AIS-04: Secure Application Design and Development'
- SAMM Objective: 'D-SA-B: Technology Management'
  SSDF: 'PO.1.2: Identify and document all security requirements for organization-developed software to meet, and maintain the requirements over time.'
  ASVS: 'V1.1.1: Verify the use of a secure software development lifecycle that addresses security in all stages of development.'
  NIST 800-53 v5 sections: ": PL-8 SECURITY AND PRIVACY ARCHITECTURES\n : SA-15 Development Process, Standards, and Tools\n : SA-17 Developer Security and Privacy Architecture and Design\n : SA-20 Customized Development of Critical Components\n : SA-23 Specialization\n : SA-3 System Development Life Cycle\n : SA-8 Security and Privacy Engineering Principles\n : SC-18 Mobile Code\n : SC-27 Platform-independent Applications\n : SC-29 Heterogeneity\n : SI-3 Malicious Code Protection"
  ISO 27001: "5.14: Information transfer\n 8.25: Secure development life cycle\n 8.26: Application security requirements\n 8.27: Secure system architecture and engineering principles"
  Cloud Controls Matrix: "AIS-02: Application Security Baseline Requirements\n AIS-04: Secure Application Design and Development"
- SAMM Objective: 'I-SB-A: Build Process'
  SSDF: "PS.2.1: Make software integrity verification information available to software acquirers.\n PS.3.1: Securely archive the necessary files and supporting data (e.g., integrity verification information, provenance data) to be retained for each software release.\n PW.6.1: Use compiler, interpreter, and build tools that offer features to improve executable security.\n PW.6.2: Determine which compiler, interpreter, and build tool features should be used and how each should be configured, then implement and use the approved configurations."
  ASVS: "V1.1.1: Verify the use of a secure software development lifecycle that addresses security in all stages of development.\n V1.14.2: Verify that binary signatures, trusted connections, and verified endpoints are used to deploy binaries to remote devices.\n V1.14.4: Verify that the build pipeline contains a build step to automatically build and verify the secure deployment of the application, particularly if the application infrastructure is software defined, such as cloud environment build scripts.\n V10.3.1: Verify that if the application has a client or server auto-update feature, updates should be obtained over secure channels and digitally signed. The update code must validate the digital signature of the update before installing or executing the update.\n V10.3.2: Verify that the application employs integrity protections, such as code signing or subresource integrity. The application must not load or execute code from untrusted sources, such as loading includes, modules, plugins, code, or libraries from untrusted sources or the Internet.\n V14.1.1: Verify that the application build and deployment processes are performed in a secure and repeatable way, such as CI / CD automation, automated configuration management, and automated deployment scripts.\n V14.1.2: Verify that compiler flags are configured to enable all available buffer overflow protections and warnings, including stack randomization, data execution prevention, and to break the build if an unsafe pointer, memory, format string, integer, or string operations are found.\n V14.1.4: Verify that the application, configuration, and all dependencies can be re-deployed using automated deployment scripts, built from a documented and tested runbook in a reasonable time, or restored from backups in a timely fashion.\n V14.1.5: Verify that authorized administrators can verify the integrity of all security-relevant configurations to detect tampering."
  NIST 800-53 v5 sections: ": SA-15 Development Process, Standards, and Tools\n : SA-3 System Development Life Cycle\n : SA-8 Security and Privacy Engineering Principles\n : SC-26 Decoys\n : SC-30 Concealment and Misdirection\n : SC-34 Non-modifiable Executable Programs\n : SC-35 External Malicious Code Identification\n : SC-36 Distributed Processing and Storage\n : SC-37 Out-of-band Channels\n : SC-38 Operations Security\n : SC-42 Sensor Capability and Data\n : SC-43 Usage Restrictions\n : SC-46 Cross Domain Policy Enforcement\n : SC-47 Alternate Communications Paths\n : SC-48 Sensor Relocation\n : SC-50 Software-enforced Separation and Policy Enforcement\n : SI-3 Malicious Code Protection"
  ISO 27001: "5.23: Information security for use of cloud services\n 5.37: Documented operating procedures\n 8.25: Secure development life cycle\n 8.31: Separation of development, test and production environments"
  Cloud Controls Matrix: "AIS-04: Secure Application Design and Development\n AIS-06: Automated Secure Application Deployment\n IVS-01: Infrastructure and Virtualization Security Policy and Procedures"
- SAMM Objective: 'I-SB-B: Software Dependencies'
  SSDF: "PO.1.3: Communicate requirements to all third parties who will provide commercial software components to the organization for reuse by the organization\u2019s own software. [Formerly PW.3.1]\n PS.3.2: Collect, safeguard, maintain, and share provenance data for all components of each software release (e.g., in a software bill of materials [SBOM]).\n PW.4.1: Acquire and maintain well-secured software components (e.g., software libraries, modules, middleware, frameworks) from commercial, open- source, and other third-party developers for use by the organization\u2019s software.\n PW.4.4: Verify that acquired commercial, open-source, and all other third-party software components comply with the requirements, as defined by the organization, throughout their life cycles\n RV.1.1: Gather information from software acquirers, users, and public sources on potential vulnerabilities in the software and third-party components that the software uses, and investigate all credible reports.\n RV.2.1: Analyze each vulnerability to gather sufficient information about risk to plan its remediation or other risk response.\n RV.2.2: Plan and implement risk responses for vulnerabilities.\n RV.3.1: Analyze identified vulnerabilities to determine their root causes.\n RV.3.2: Analyze the root causes over time to identify patterns, such as a particular secure coding practice not being followed consistently.\n RV.3.3: Review the software for similar vulnerabilities to eradicate a class of vulnerabilities, and proactively fix them rather than waiting for external reports."
  ASVS: "V1.1.1: Verify the use of a secure software development lifecycle that addresses security in all stages of development.\n V1.14.3: Verify that the build pipeline warns of out-of-date or insecure components and takes appropriate actions.\n V14.2.1: Verify that all components are up to date, preferably using a dependency checker during build or compile time.\n V14.2.5: Verify that a Software Bill of Materials (SBOM) is maintained of all third party libraries in use."
  NIST 800-53 v5 sections: ": PM-30 Supply Chain Risk Management Strategy\n : SA-1 Policy and Procedures\n : SA-15 Development Process, Standards, and Tools\n : SA-22 Unsupported System Components\n : SA-3 System Development Life Cycle\n : SA-4 Acquisition Process\n : SA-8 Security and Privacy Engineering Principles\n : SA-9 External System Services\n : SI-2 Flaw Remediation\n : SI-3 Malicious Code Protection\n : SR-1 Policy and Procedures\n : SR-10 Inspection of Systems or Components\n : SR-11 Component Authenticity\n : SR-12 Component Disposal\n : SR-2 Supply Chain Risk Management Plan\n : SR-3 Supply Chain Controls and Processes\n : SR-4 Provenance\n : SR-5 Acquisition Strategies, Tools, and Methods\n : SR-6 Supplier Assessments and Reviews\n : SR-7 Supply Chain Operations Security\n : SR-8 Notification Agreements\n : SR-9 Tamper Resistance and Detection"
  ISO 27001: "5.19: Information security in supplier relationships\n 5.21: Managing information security in the information and communication technology (ICT) supply chain\n 5.22: Monitoring, review and change management of supplier services\n 5.23: Information security for use of cloud services\n 5.2: Addressing information security within supplier agreements\n 8.25: Secure development life cycle\n 8.3: Outsourced development\n 8.8: Management of technical vulnerabilities"
  Cloud Controls Matrix: "AIS-04: Secure Application Design and Development\n AIS-07: Application Vulnerability Remediation\n TVM: Threat & Vulnerability Management"
- SAMM Objective: 'I-SD-A: Deployment Process'
  SSDF: "PS.2.1: Make software integrity verification information available to software acquirers.\n PS.3.1: Securely archive the necessary files and supporting data (e.g., integrity verification information, provenance data) to be retained for each software release.\n PW.6.1: Use compiler, interpreter, and build tools that offer features to improve executable security.\n PW.6.2: Determine which compiler, interpreter, and build tool features should be used and how each should be configured, then implement and use the approved configurations."
  ASVS: "V1.1.1: Verify the use of a secure software development lifecycle that addresses security in all stages of development.\n V1.14.2: Verify that binary signatures, trusted connections, and verified endpoints are used to deploy binaries to remote devices.\n V1.14.4: Verify that the build pipeline contains a build step to automatically build and verify the secure deployment of the application, particularly if the application infrastructure is software defined, such as cloud environment build scripts.\n V10.3.1: Verify that if the application has a client or server auto-update feature, updates should be obtained over secure channels and digitally signed. The update code must validate the digital signature of the update before installing or executing the update.\n V10.3.2: Verify that the application employs integrity protections, such as code signing or subresource integrity. The application must not load or execute code from untrusted sources, such as loading includes, modules, plugins, code, or libraries from untrusted sources or the Internet.\n V14.1.1: Verify that the application build and deployment processes are performed in a secure and repeatable way, such as CI / CD automation, automated configuration management, and automated deployment scripts.\n V14.1.2: Verify that compiler flags are configured to enable all available buffer overflow protections and warnings, including stack randomization, data execution prevention, and to break the build if an unsafe pointer, memory, format string, integer, or string operations are found.\n V14.1.4: Verify that the application, configuration, and all dependencies can be re-deployed using automated deployment scripts, built from a documented and tested runbook in a reasonable time, or restored from backups in a timely fashion.\n V14.1.5: Verify that authorized administrators can verify the integrity of all security-relevant configurations to detect tampering."
  NIST 800-53 v5 sections: ": SA-15 Development Process, Standards, and Tools\n : SA-3 System Development Life Cycle\n : SA-8 Security and Privacy Engineering Principles\n : SC-26 Decoys\n : SC-30 Concealment and Misdirection\n : SC-34 Non-modifiable Executable Programs\n : SC-35 External Malicious Code Identification\n : SC-36 Distributed Processing and Storage\n : SC-37 Out-of-band Channels\n : SC-38 Operations Security\n : SC-42 Sensor Capability and Data\n : SC-43 Usage Restrictions\n : SC-46 Cross Domain Policy Enforcement\n : SC-47 Alternate Communications Paths\n : SC-48 Sensor Relocation\n : SC-50 Software-enforced Separation and Policy Enforcement\n : SI-3 Malicious Code Protection"
  ISO 27001: "5.23: Information security for use of cloud services\n 5.37: Documented operating procedures\n 8.25: Secure development life cycle\n 8.31: Separation of development, test and production environments"
  Cloud Controls Matrix: "AIS-04: Secure Application Design and Development\n AIS-06: Automated Secure Application Deployment\n IVS-01: Infrastructure and Virtualization Security Policy and Procedures"
- SAMM Objective: 'I-SD-B: Secret Management'
  SSDF: "PW.5.1: Follow all secure coding practices that are appropriate to the development languages and environment to meet the organization\u2019s requirements"
  ASVS: "V1.6.1: Verify that there is an explicit policy for management of cryptographic keys and that a cryptographic key lifecycle follows a key management standard such as NIST SP 800-57.\n V1.6.2: Verify that consumers of cryptographic services protect key material and other secrets by using key vaults or API based alternatives.\n V1.6.3: Verify that all keys and passwords are replaceable and are part of a well-defined process to re-encrypt sensitive data.\n V2.10.3: Verify that passwords are stored with sufficient protection to prevent offline recovery attacks, including local system access.\n V2.10.4: Verify passwords, integrations with databases and third-party systems, seeds and internal secrets, and API keys are managed securely and not included in the source code or stored within source code repositories. Such storage SHOULD resist offline attacks. The use of a secure software key store (L1), hardware TPM, or an HSM (L3) is recommended for password storage.\n V2.4.1: Verify that passwords are stored in a form that is resistant to offline attacks. Passwords SHALL be salted and hashed using an approved one-way key derivation or password hashing function. Key derivation and password hashing functions take a password, a salt, and a cost factor as inputs when generating a password hash.\n V2.4.2: Verify that the salt is at least 32 bits in length and be chosen arbitrarily to minimize salt value collisions among stored hashes. For each credential, a unique salt value and the resulting hash SHALL be stored.\n V2.4.3: Verify that if PBKDF2 is used, the iteration count SHOULD be as large as verification server performance will allow, typically at least 100,000 iterations.\n V2.4.4: Verify that if bcrypt is used, the work factor SHOULD be as large as verification server performance will allow, with a minimum of 10.\n V2.4.5: Verify that an additional iteration of a key derivation function is performed, using a salt value that is secret and known only to the verifier. Generate the salt value using an approved random bit generator [SP 800-90Ar1] and provide at least the minimum security strength specified in the latest revision of SP 800-131A. The secret salt value SHALL be stored separately from the hashed passwords (e.g., in a specialized device like a hardware security module).\n V2.8.2: Verify that symmetric keys used to verify submitted OTPs are highly protected, such as by using a hardware security module or secure operating system based key storage.\n V2.9.1: Verify that cryptographic keys used in verification are stored securely and protected against disclosure, such as using a Trusted Platform Module (TPM) or Hardware Security Module (HSM), or an OS service that can use this secure storage.\n V6.4.1: Verify that a secrets management solution such as a key vault is used to securely create, store, control access to and destroy secrets.\n V6.4.2: Verify that key material is not exposed to the application but instead uses an isolated security module like a vault for cryptographic operations."
  NIST 800-53 v5 sections: ": SC-12 CRYPTOGRAPHIC KEY ESTABLISHMENT AND MANAGEMENT\n : SC-13 Cryptographic Protection\n : SC-17 Public Key Infrastructure Certificates\n : SC-34 Non-modifiable Executable Programs"
  ISO 27001: '8.24: Use of cryptography'
  Cloud Controls Matrix: "AIS-06: Automated Secure Application Deployment\n CEK: Cryptography, Encryption & Key Management"
- SAMM Objective: 'I-DM-A: Defect Tracking'
  SSDF: "PO.4.1: Define criteria for software security checks and track throughout the SDLC.\n PO.4.2: Implement processes, mechanisms, etc. to gather and safeguard the necessary information in support of the criteria.\n RV.1.1: Gather information from software acquirers, users, and public sources on potential vulnerabilities in the software and third-party components that the software uses, and investigate all credible reports.\n RV.1.2: Review, analyze, and/or test the software\u2019s code to identify or confirm the presence of previously undetected vulnerabilities.\n RV.1.3: Have a policy that addresses vulnerability disclosure and remediation, and implement the roles, responsibilities, and processes needed to support that policy.\n RV.2.1: Analyze each vulnerability to gather sufficient information about risk to plan its remediation or other risk response.\n RV.2.2: Plan and implement risk responses for vulnerabilities.\n RV.3.1: Analyze identified vulnerabilities to determine their root causes.\n RV.3.2: Analyze the root causes over time to identify patterns, such as a particular secure coding practice not being followed consistently.\n RV.3.3: Review the software for similar vulnerabilities to eradicate a class of vulnerabilities, and proactively fix them rather than waiting for external reports."
  ASVS: .nan
  NIST 800-53 v5 sections: ": IR-1 Policy and Procedures\n : IR-2 Incident Response Training\n : IR-3 Incident Response Testing\n : IR-4 Incident Handling\n : IR-5 Incident Monitoring\n : IR-6 Incident Reporting\n : IR-7 Incident Response Assistance\n : IR-8 Incident Response Plan\n : IR-9 Information Spillage Response\n : SA-11 Developer Testing and Evaluation\n : SC-26 Decoys\n : SC-30 Concealment and Misdirection\n : SC-35 External Malicious Code Identification\n : SC-36 Distributed Processing and Storage\n : SC-37 Out-of-band Channels\n : SC-38 Operations Security\n : SC-42 Sensor Capability and Data\n : SC-43 Usage Restrictions\n : SC-46 Cross Domain Policy Enforcement\n : SC-47 Alternate Communications Paths\n : SC-48 Sensor Relocation\n : SC-50 Software-enforced Separation and Policy Enforcement\n : SI-2 Flaw Remediation"
  ISO 27001: "5.23: Information security for use of cloud services\n 5.24: Information security incident management planning and preparation\n 5.25: Assessment and decision on information security events\n 5.26: Response to information security incidents\n 5.27: Learning from information security incidents\n 5.28: Collection of evidence\n 5.37: Documented operating procedures\n 6.8: Information security event reporting\n 8.29: Security testing in development and acceptance\n 8.31: Separation of development, test and production environments\n 8.33: Test information\n 8.8: Management of technical vulnerabilities"
  Cloud Controls Matrix: "AIS-05: Automated Application Security Testing\n AIS-07: Application Vulnerability Remediation\n IVS-01: Infrastructure and Virtualization Security Policy and Procedures\n SEF: Security Incident Management, E-Discovery, & Cloud Forensics\n STA: Supply Chain Management, Transparency, and Accountability\n TVM: Threat & Vulnerability Management"
- SAMM Objective: 'I-DM-B: Metrics and Feedback'
  SSDF: "PO.4.1: Define criteria for software security checks and track throughout the SDLC.\n PO.4.2: Implement processes, mechanisms, etc. to gather and safeguard the necessary information in support of the criteria.\n RV.1.1: Gather information from software acquirers, users, and public sources on potential vulnerabilities in the software and third-party components that the software uses, and investigate all credible reports.\n RV.1.2: Review, analyze, and/or test the software\u2019s code to identify or confirm the presence of previously undetected vulnerabilities.\n RV.1.3: Have a policy that addresses vulnerability disclosure and remediation, and implement the roles, responsibilities, and processes needed to support that policy.\n RV.2.1: Analyze each vulnerability to gather sufficient information about risk to plan its remediation or other risk response.\n RV.2.2: Plan and implement risk responses for vulnerabilities.\n RV.3.1: Analyze identified vulnerabilities to determine their root causes.\n RV.3.2: Analyze the root causes over time to identify patterns, such as a particular secure coding practice not being followed consistently.\n RV.3.3: Review the software for similar vulnerabilities to eradicate a class of vulnerabilities, and proactively fix them rather than waiting for external reports."
  ASVS: .nan
  NIST 800-53 v5 sections: ": IR-1 Policy and Procedures\n : IR-2 Incident Response Training\n : IR-3 Incident Response Testing\n : IR-4 Incident Handling\n : IR-5 Incident Monitoring\n : IR-6 Incident Reporting\n : IR-7 Incident Response Assistance\n : IR-8 Incident Response Plan\n : IR-9 Information Spillage Response\n : SA-11 Developer Testing and Evaluation\n : SC-26 Decoys\n : SC-30 Concealment and Misdirection\n : SC-35 External Malicious Code Identification\n : SC-36 Distributed Processing and Storage\n : SC-37 Out-of-band Channels\n : SC-38 Operations Security\n : SC-42 Sensor Capability and Data\n : SC-43 Usage Restrictions\n : SC-46 Cross Domain Policy Enforcement\n : SC-47 Alternate Communications Paths\n : SC-48 Sensor Relocation\n : SC-50 Software-enforced Separation and Policy Enforcement\n : SI-2 Flaw Remediation"
  ISO 27001: "5.23: Information security for use of cloud services\n 5.24: Information security incident management planning and preparation\n 5.25: Assessment and decision on information security events\n 5.26: Response to information security incidents\n 5.27: Learning from information security incidents\n 5.28: Collection of evidence\n 5.37: Documented operating procedures\n 6.8: Information security event reporting\n 8.29: Security testing in development and acceptance\n 8.31: Separation of development, test and production environments\n 8.33: Test information\n 8.8: Management of technical vulnerabilities"
  Cloud Controls Matrix: "AIS-05: Automated Application Security Testing\n AIS-07: Application Vulnerability Remediation\n IVS-01: Infrastructure and Virtualization Security Policy and Procedures\n SEF: Security Incident Management, E-Discovery, & Cloud Forensics\n STA: Supply Chain Management, Transparency, and Accountability\n TVM: Threat & Vulnerability Management"
- SAMM Objective: 'V-AA-A: Architecture Validation'
  SSDF: "PO.4.1: Define criteria for software security checks and track throughout the SDLC.\n PO.4.2: Implement processes, mechanisms, etc. to gather and safeguard the necessary information in support of the criteria.\n PW.2.1: Have 1) a qualified person (or people) who were not involved with the design and/or 2) automated processes instantiated in the toolchain review the software design to confirm and enforce that it meets all of the security requirements and satisfactorily addresses the identified risk information.\n RV.1.2: Review, analyze, and/or test the software\u2019s code to identify or confirm the presence of previously undetected vulnerabilities."
  ASVS: 'V1.1.1: Verify the use of a secure software development lifecycle that addresses security in all stages of development.'
  NIST 800-53 v5 sections: ": PL-8 SECURITY AND PRIVACY ARCHITECTURES\n : SA-11 Developer Testing and Evaluation\n : SA-15 Development Process, Standards, and Tools\n : SA-17 Developer Security and Privacy Architecture and Design\n : SA-20 Customized Development of Critical Components\n : SA-23 Specialization\n : SA-3 System Development Life Cycle\n : SA-8 Security and Privacy Engineering Principles\n : SC-27 Platform-independent Applications\n : SC-29 Heterogeneity\n : SI-3 Malicious Code Protection\n : SI-6 Security and Privacy Function Verification\n : SI-7 Software, Firmware, and Information Integrity"
  ISO 27001: "8.25: Secure development life cycle\n 8.27: Secure system architecture and engineering principles\n 8.29: Security testing in development and acceptance\n 8.33: Test information"
  Cloud Controls Matrix: "AIS-04: Secure Application Design and Development\n AIS-05: Automated Application Security Testing\n STA: Supply Chain Management, Transparency, and Accountability"
- SAMM Objective: 'V-AA-B: Architecture Mitigation'
  SSDF: "PO.4.1: Define criteria for software security checks and track throughout the SDLC.\n PO.4.2: Implement processes, mechanisms, etc. to gather and safeguard the necessary information in support of the criteria.\nPW.2.1: Have 1) a qualified person (or people) who were not involved with the design and/or 2) automated processes instantiated in the toolchain review the software design to confirm and enforce that it meets all of the security requirements and satisfactorily addresses the identified risk information.\n RV.1.2: Review, analyze, and/or test the software\u2019s code to identify or confirm the presence of previously undetected vulnerabilities."
  ASVS: 'V1.1.1: Verify the use of a secure software development lifecycle that addresses security in all stages of development.'
  NIST 800-53 v5 sections: ": PL-8 SECURITY AND PRIVACY ARCHITECTURES\n : SA-11 Developer Testing and Evaluation\n : SA-15 Development Process, Standards, and Tools\n : SA-17 Developer Security and Privacy Architecture and Design\n : SA-20 Customized Development of Critical Components\n : SA-23 Specialization\n : SA-3 System Development Life Cycle\n : SA-8 Security and Privacy Engineering Principles\n : SC-27 Platform-independent Applications\n : SC-29 Heterogeneity\n : SI-3 Malicious Code Protection\n : SI-6 Security and Privacy Function Verification\n : SI-7 Software, Firmware, and Information Integrity"
  ISO 27001: "8.25: Secure development life cycle\n 8.27: Secure system architecture and engineering principles\n 8.29: Security testing in development and acceptance\n 8.33: Test information"
  Cloud Controls Matrix: "AIS-04: Secure Application Design and Development\n AIS-05: Automated Application Security Testing\n STA: Supply Chain Management, Transparency, and Accountability"
- SAMM Objective: 'V-RT-A: Control Verification'
  SSDF: "PO.1.3: Communicate requirements to all third parties who will provide commercial software components to the organization for reuse by the organization\u2019s own software. [Formerly PW.3.1]\n PO.3.3: Configure tools to generate artifacts of their support of secure software development practices as defined by the organization.\n PO.4.1: Define criteria for software security checks and track throughout the SDLC.\n PO.4.2: Implement processes, mechanisms, etc. to gather and safeguard the necessary information in support of the criteria.\n PW.2.1: Have 1) a qualified person (or people) who were not involved with the design and/or 2) automated processes instantiated in the toolchain review the software design to confirm and enforce that it meets all of the security requirements and satisfactorily addresses the identified risk information.\n PW.4.1: Acquire and maintain well-secured software components (e.g., software libraries, modules, middleware, frameworks) from commercial, open- source, and other third-party developers for use by the organization\u2019s software.\n PW.4.4: Verify that acquired commercial, open-source, and all other third-party software components comply with the requirements, as defined by the organization, throughout their life cycles\n PW.7.1: Determine whether code review (a person looks directly at the code to find issues) and/or code analysis (tools are used to find issues in code, either in a fully automated way or in conjunction with a person) should be used, as defined by the organization.\n PW.7.2: Perform the code review and/or code analysis based on the organization\u2019s secure coding standards, and record and triage all discovered issues and recommended remediations in the development team\u2019s workflow or issue tracking system.\n RV.1.1: Gather information from software acquirers, users, and public sources on potential vulnerabilities in the software and third-party components that the software uses, and investigate all credible reports.\n RV.1.2: Review, analyze, and/or test the software\u2019s code to identify or confirm the presence of previously undetected vulnerabilities.\n RV.2.1: Analyze each vulnerability to gather sufficient information about risk to plan its remediation or other risk response.\n RV.2.2: Plan and implement risk responses for vulnerabilities.\n RV.3.1: Analyze identified vulnerabilities to determine their root causes.\n RV.3.2: Analyze the root causes over time to identify patterns, such as a particular secure coding practice not being followed consistently.\n RV.3.3: Review the software for similar vulnerabilities to eradicate a class of vulnerabilities, and proactively fix them rather than waiting for external reports."
  ASVS: 'V1.1.1: Verify the use of a secure software development lifecycle that addresses security in all stages of development.'
  NIST 800-53 v5 sections: ": CA-1 Policy and Procedures\n : CA-2 Control Assessments\n : CA-5 Plan of Action and Milestones\n : CA-6 Authorization\n : CA-7 Continuous Monitoring\n : CA-8 Penetration Testing\n : PM-30 Supply Chain Risk Management Strategy\n : PM-31 Continuous Monitoring Strategy\n : PM-6 Measures of Performance\n : SA-1 Policy and Procedures\n : SA-11 Developer Testing and Evaluation\n : SA-15 Development Process, Standards, and Tools\n : SA-22 Unsupported System Components\n : SA-3 System Development Life Cycle\n : SA-4 Acquisition Process\n : SA-8 Security and Privacy Engineering Principles\n : SA-9 External System Services\n : SI-2 Flaw Remediation\n : SI-20 Tainting\n : SI-3 Malicious Code Protection\n : SI-5 Security Alerts, Advisories, and Directives\n : SI-6 Security and Privacy Function Verification\n : SI-7 Software, Firmware, and Information Integrity\n : SR-1 Policy and Procedures\n : SR-10 Inspection of Systems or Components\n : SR-11 Component Authenticity\n : SR-12 Component Disposal\n : SR-2 Supply Chain Risk Management Plan\n : SR-3 Supply Chain Controls and Processes\n : SR-4 Provenance\n : SR-5 Acquisition Strategies, Tools, and Methods\n : SR-6 Supplier Assessments and Reviews\n : SR-7 Supply Chain Operations Security\n : SR-8 Notification Agreements\n : SR-9 Tamper Resistance and Detection"
  ISO 27001: "5.19: Information security in supplier relationships\n 5.21: Managing information security in the information and communication technology (ICT) supply chain\n 5.22: Monitoring, review and change management of supplier services\n 5.23: Information security for use of cloud services\n 5.2: Addressing information security within supplier agreements\n 8.25: Secure development life cycle\n 8.29: Security testing in development and acceptance\n 8.33: Test information\n 8.3: Outsourced development\n 8.8: Management of technical vulnerabilities"
  Cloud Controls Matrix: "AIS-03: Application Security Metrics\n AIS-04: Secure Application Design and Development\n AIS-05: Automated Application Security Testing\n AIS-07: Application Vulnerability Remediation\n STA: Supply Chain Management, Transparency, and Accountability\n TVM: Threat & Vulnerability Management"
- SAMM Objective: 'V-RT-B: Misuse/Abuse Testing'
  SSDF: "PO.1.3: Communicate requirements to all third parties who will provide commercial software components to the organization for reuse by the organization\u2019s own software. [Formerly PW.3.1]\n PO.3.3: Configure tools to generate artifacts of their support of secure software development practices as defined by the organization.\n PO.4.1: Define criteria for software security checks and track throughout the SDLC.\n PO.4.2: Implement processes, mechanisms, etc. to gather and safeguard the necessary information in support of the criteria.\n PW.2.1: Have 1) a qualified person (or people) who were not involved with the design and/or 2) automated processes instantiated in the toolchain review the software design to confirm and enforce that it meets all of the security requirements and satisfactorily addresses the identified risk information.\n PW.4.1: Acquire and maintain well-secured software components (e.g., software libraries, modules, middleware, frameworks) from commercial, open- source, and other third-party developers for use by the organization\u2019s software.\n PW.4.4: Verify that acquired commercial, open-source, and all other third-party software components comply with the requirements, as defined by the organization, throughout their life cycles\n PW.7.1: Determine whether code review (a person looks directly at the code to find issues) and/or code analysis (tools are used to find issues in code, either in a fully automated way or in conjunction with a person) should be used, as defined by the organization.\n PW.7.2: Perform the code review and/or code analysis based on the organization\u2019s secure coding standards, and record and triage all discovered issues and recommended remediations in the development team\u2019s workflow or issue tracking system.\n RV.1.1: Gather information from software acquirers, users, and public sources on potential vulnerabilities in the software and third-party components that the software uses, and investigate all credible reports.\n RV.1.2: Review, analyze, and/or test the software\u2019s code to identify or confirm the presence of previously undetected vulnerabilities.\n RV.2.1: Analyze each vulnerability to gather sufficient information about risk to plan its remediation or other risk response.\n RV.2.2: Plan and implement risk responses for vulnerabilities.\n RV.3.1: Analyze identified vulnerabilities to determine their root causes.\n RV.3.2: Analyze the root causes over time to identify patterns, such as a particular secure coding practice not being followed consistently.\n RV.3.3: Review the software for similar vulnerabilities to eradicate a class of vulnerabilities, and proactively fix them rather than waiting for external reports."
  ASVS: 'V1.1.1: Verify the use of a secure software development lifecycle that addresses security in all stages of development.'
  NIST 800-53 v5 sections: ": CA-1 Policy and Procedures\n : CA-2 Control Assessments\n : CA-5 Plan of Action and Milestones\n : CA-6 Authorization\n : CA-7 Continuous Monitoring\n : CA-8 Penetration Testing\n : PM-30 Supply Chain Risk Management Strategy\n : PM-31 Continuous Monitoring Strategy\n : PM-6 Measures of Performance\n : SA-1 Policy and Procedures\n : SA-11 Developer Testing and Evaluation\n : SA-15 Development Process, Standards, and Tools\n : SA-22 Unsupported System Components\n : SA-3 System Development Life Cycle\n : SA-4 Acquisition Process\n : SA-8 Security and Privacy Engineering Principles\n : SA-9 External System Services\n : SI-2 Flaw Remediation\n : SI-20 Tainting\n : SI-3 Malicious Code Protection\n : SI-5 Security Alerts, Advisories, and Directives\n : SI-6 Security and Privacy Function Verification\n : SI-7 Software, Firmware, and Information Integrity\n : SR-1 Policy and Procedures\n : SR-10 Inspection of Systems or Components\n : SR-11 Component Authenticity\n : SR-12 Component Disposal\n : SR-2 Supply Chain Risk Management Plan\n : SR-3 Supply Chain Controls and Processes\n : SR-4 Provenance\n : SR-5 Acquisition Strategies, Tools, and Methods\n : SR-6 Supplier Assessments and Reviews\n : SR-7 Supply Chain Operations Security\n : SR-8 Notification Agreements\n : SR-9 Tamper Resistance and Detection"
  ISO 27001: "5.19: Information security in supplier relationships\n 5.21: Managing information security in the information and communication technology (ICT) supply chain\n 5.22: Monitoring, review and change management of supplier services\n 5.23: Information security for use of cloud services\n 5.2: Addressing information security within supplier agreements\n 8.25: Secure development life cycle\n 8.29: Security testing in development and acceptance\n 8.33: Test information\n 8.3: Outsourced development\n 8.8: Management of technical vulnerabilities"
  Cloud Controls Matrix: "AIS-03: Application Security Metrics\n AIS-04: Secure Application Design and Development\n AIS-05: Automated Application Security Testing\n AIS-07: Application Vulnerability Remediation\n STA: Supply Chain Management, Transparency, and Accountability\n TVM: Threat & Vulnerability Management"
- SAMM Objective: 'V-ST-A: Scalable Baseline'
  SSDF: "PO.1.3: Communicate requirements to all third parties who will provide commercial software components to the organization for reuse by the organization\u2019s own software. [Formerly PW.3.1]\n PO.3.3: Configure tools to generate artifacts of their support of secure software development practices as defined by the organization.\n PO.4.1: Define criteria for software security checks and track throughout the SDLC.\n PO.4.2: Implement processes, mechanisms, etc. to gather and safeguard the necessary information in support of the criteria.\n PW.2.1: Have 1) a qualified person (or people) who were not involved with the design and/or 2) automated processes instantiated in the toolchain review the software design to confirm and enforce that it meets all of the security requirements and satisfactorily addresses the identified risk information.\n PW.4.1: Acquire and maintain well-secured software components (e.g., software libraries, modules, middleware, frameworks) from commercial, open- source, and other third-party developers for use by the organization\u2019s software.\n PW.4.4: Verify that acquired commercial, open-source, and all other third-party software components comply with the requirements, as defined by the organization, throughout their life cycles\n PW.7.1: Determine whether code review (a person looks directly at the code to find issues) and/or code analysis (tools are used to find issues in code, either in a fully automated way or in conjunction with a person) should be used, as defined by the organization.\n PW.7.2: Perform the code review and/or code analysis based on the organization\u2019s secure coding standards, and record and triage all discovered issues and recommended remediations in the development team\u2019s workflow or issue tracking system.\n RV.1.1: Gather information from software acquirers, users, and public sources on potential vulnerabilities in the software and third-party components that the software uses, and investigate all credible reports.\n RV.1.2: Review, analyze, and/or test the software\u2019s code to identify or confirm the presence of previously undetected vulnerabilities.\n RV.2.1: Analyze each vulnerability to gather sufficient information about risk to plan its remediation or other risk response.\n RV.2.2: Plan and implement risk responses for vulnerabilities.\n RV.3.1: Analyze identified vulnerabilities to determine their root causes.\n RV.3.2: Analyze the root causes over time to identify patterns, such as a particular secure coding practice not being followed consistently.\n RV.3.3: Review the software for similar vulnerabilities to eradicate a class of vulnerabilities, and proactively fix them rather than waiting for external reports."
  ASVS: 'V1.1.1: Verify the use of a secure software development lifecycle that addresses security in all stages of development.'
  NIST 800-53 v5 sections: ": CA-1 Policy and Procedures\n : CA-2 Control Assessments\n : CA-5 Plan of Action and Milestones\n : CA-6 Authorization\n : CA-7 Continuous Monitoring\n : CA-8 Penetration Testing\n : PM-30 Supply Chain Risk Management Strategy\n : PM-31 Continuous Monitoring Strategy\n : PM-6 Measures of Performance\n : SA-1 Policy and Procedures\n : SA-11 Developer Testing and Evaluation\n : SA-15 Development Process, Standards, and Tools\n : SA-22 Unsupported System Components\n : SA-3 System Development Life Cycle\n : SA-4 Acquisition Process\n : SA-8 Security and Privacy Engineering Principles\n : SA-9 External System Services\n : SI-2 Flaw Remediation\n : SI-20 Tainting\n : SI-3 Malicious Code Protection\n : SI-5 Security Alerts, Advisories, and Directives\n : SI-6 Security and Privacy Function Verification\n : SI-7 Software, Firmware, and Information Integrity\n : SR-1 Policy and Procedures\n : SR-10 Inspection of Systems or Components\n : SR-11 Component Authenticity\n : SR-12 Component Disposal\n : SR-2 Supply Chain Risk Management Plan\n : SR-3 Supply Chain Controls and Processes\n : SR-4 Provenance\n : SR-5 Acquisition Strategies, Tools, and Methods\n : SR-6 Supplier Assessments and Reviews\n : SR-7 Supply Chain Operations Security\n : SR-8 Notification Agreements\n : SR-9 Tamper Resistance and Detection"
  ISO 27001: "5.19: Information security in supplier relationships\n 5.21: Managing information security in the information and communication technology (ICT) supply chain\n 5.22: Monitoring, review and change management of supplier services\n 5.23: Information security for use of cloud services\n 5.2: Addressing information security within supplier agreements\n 8.25: Secure development life cycle\n 8.29: Security testing in development and acceptance\n 8.33: Test information\n 8.3: Outsourced development\n 8.8: Management of technical vulnerabilities"
  Cloud Controls Matrix: "AIS-03: Application Security Metrics\n AIS-04: Secure Application Design and Development\n AIS-05: Automated Application Security Testing\n AIS-07: Application Vulnerability Remediation\n STA: Supply Chain Management, Transparency, and Accountability\n TVM: Threat & Vulnerability Management"
- SAMM Objective: 'V-ST-B: Deep Understanding'
  SSDF: "PO.1.3: Communicate requirements to all third parties who will provide commercial software components to the organization for reuse by the organization\u2019s own software. [Formerly PW.3.1]\n PO.3.3: Configure tools to generate artifacts of their support of secure software development practices as defined by the organization.\n PO.4.1: Define criteria for software security checks and track throughout the SDLC.\n PO.4.2: Implement processes, mechanisms, etc. to gather and safeguard the necessary information in support of the criteria.\n PW.2.1: Have 1) a qualified person (or people) who were not involved with the design and/or 2) automated processes instantiated in the toolchain review the software design to confirm and enforce that it meets all of the security requirements and satisfactorily addresses the identified risk information.\n PW.4.1: Acquire and maintain well-secured software components (e.g., software libraries, modules, middleware, frameworks) from commercial, open- source, and other third-party developers for use by the organization\u2019s software.\n PW.4.4: Verify that acquired commercial, open-source, and all other third-party software components comply with the requirements, as defined by the organization, throughout their life cycles\n PW.7.1: Determine whether code review (a person looks directly at the code to find issues) and/or code analysis (tools are used to find issues in code, either in a fully automated way or in conjunction with a person) should be used, as defined by the organization.\n PW.7.2: Perform the code review and/or code analysis based on the organization\u2019s secure coding standards, and record and triage all discovered issues and recommended remediations in the development team\u2019s workflow or issue tracking system.\n RV.1.1: Gather information from software acquirers, users, and public sources on potential vulnerabilities in the software and third-party components that the software uses, and investigate all credible reports.\n RV.1.2: Review, analyze, and/or test the software\u2019s code to identify or confirm the presence of previously undetected vulnerabilities.\n RV.2.1: Analyze each vulnerability to gather sufficient information about risk to plan its remediation or other risk response.\n RV.2.2: Plan and implement risk responses for vulnerabilities.\n RV.3.1: Analyze identified vulnerabilities to determine their root causes.\n RV.3.2: Analyze the root causes over time to identify patterns, such as a particular secure coding practice not being followed consistently.\n RV.3.3: Review the software for similar vulnerabilities to eradicate a class of vulnerabilities, and proactively fix them rather than waiting for external reports."
  ASVS: 'V1.1.1: Verify the use of a secure software development lifecycle that addresses security in all stages of development.'
  NIST 800-53 v5 sections: ": CA-1 Policy and Procedures\n : CA-2 Control Assessments\n : CA-5 Plan of Action and Milestones\n : CA-6 Authorization\n : CA-7 Continuous Monitoring\n : CA-8 Penetration Testing\n : PM-30 Supply Chain Risk Management Strategy\n : PM-31 Continuous Monitoring Strategy\n : PM-6 Measures of Performance\n : SA-1 Policy and Procedures\n : SA-11 Developer Testing and Evaluation\n : SA-15 Development Process, Standards, and Tools\n : SA-22 Unsupported System Components\n : SA-3 System Development Life Cycle\n : SA-4 Acquisition Process\n : SA-8 Security and Privacy Engineering Principles\n : SA-9 External System Services\n : SI-2 Flaw Remediation\n : SI-20 Tainting\n : SI-3 Malicious Code Protection\n : SI-5 Security Alerts, Advisories, and Directives\n : SI-6 Security and Privacy Function Verification\n : SI-7 Software, Firmware, and Information Integrity\n : SR-1 Policy and Procedures\n : SR-10 Inspection of Systems or Components\n : SR-11 Component Authenticity\n : SR-12 Component Disposal\n : SR-2 Supply Chain Risk Management Plan\n : SR-3 Supply Chain Controls and Processes\n : SR-4 Provenance\n : SR-5 Acquisition Strategies, Tools, and Methods\n : SR-6 Supplier Assessments and Reviews\n : SR-7 Supply Chain Operations Security\n : SR-8 Notification Agreements\n : SR-9 Tamper Resistance and Detection"
  ISO 27001: "5.19: Information security in supplier relationships\n 5.21: Managing information security in the information and communication technology (ICT) supply chain\n 5.22: Monitoring, review and change management of supplier services\n 5.23: Information security for use of cloud services\n 5.2: Addressing information security within supplier agreements\n 8.25: Secure development life cycle\n 8.29: Security testing in development and acceptance\n 8.33: Test information\n 8.3: Outsourced development\n 8.8: Management of technical vulnerabilities"
  Cloud Controls Matrix: "AIS-03: Application Security Metrics\n AIS-04: Secure Application Design and Development\n AIS-05: Automated Application Security Testing\n AIS-07: Application Vulnerability Remediation\n STA: Supply Chain Management, Transparency, and Accountability\n TVM: Threat & Vulnerability Management"
- SAMM Objective: 'O-IM-A: Incident Detection'
  SSDF: .nan
  ASVS: "V11.1.7: Verify that the application monitors for unusual events or activity from a business logic perspective. For example, attempts to perform actions out of order or actions which a normal user would never attempt.\n V8.1.4: Verify the application can detect and alert on abnormal numbers of requests, such as by IP, user, total per hour or day, or whatever makes sense for the application."
  NIST 800-53 v5 sections: ": AU-1 Policy and Procedures\n : AU-11 Audit Record Retention\n : AU-12 Audit Record Generation\n : AU-16 Cross-organizational Audit Logging\n : AU-4 Audit Log Storage Capacity\n : AU-5 Response to Audit Logging Process Failures\n : AU-6 Audit Record Review, Analysis, and Reporting\n : AU-7 Audit Record Reduction and Report Generation\n : SC-26 Decoys\n : SC-30 Concealment and Misdirection\n : SC-35 External Malicious Code Identification\n : SC-36 Distributed Processing and Storage\n : SC-37 Out-of-band Channels\n : SC-38 Operations Security\n : SC-42 Sensor Capability and Data\n : SC-43 Usage Restrictions\n : SC-46 Cross Domain Policy Enforcement\n : SC-47 Alternate Communications Paths\n : SC-48 Sensor Relocation\n : SC-50 Software-enforced Separation and Policy Enforcement\n : SI-11 Error Handling\n : SI-4 System Monitoring"
  ISO 27001: "5.23: Information security for use of cloud services\n 5.37: Documented operating procedures\n 8.15: Logging\n 8.16: Monitoring activities\n 8.31: Separation of development, test and production environments"
  Cloud Controls Matrix: "IVS-01: Infrastructure and Virtualization Security Policy and Procedures\n LOG: Logging and Monitoring"
- SAMM Objective: 'O-IM-B: Incident Response'
  SSDF: "RV.1.1: Gather information from software acquirers, users, and public sources on potential vulnerabilities in the software and third-party components that the software uses, and investigate all credible reports.\n RV.1.3: Have a policy that addresses vulnerability disclosure and remediation, and implement the roles, responsibilities, and processes needed to support that policy.\n RV.2.1: Analyze each vulnerability to gather sufficient information about risk to plan its remediation or other risk response.\n RV.2.2: Plan and implement risk responses for vulnerabilities.\n RV.3.1: Analyze identified vulnerabilities to determine their root causes.\n RV.3.2: Analyze the root causes over time to identify patterns, such as a particular secure coding practice not being followed consistently.\n RV.3.3: Review the software for similar vulnerabilities to eradicate a class of vulnerabilities, and proactively fix them rather than waiting for external reports."
  ASVS: .nan
  NIST 800-53 v5 sections: ": IR-1 Policy and Procedures\n : IR-2 Incident Response Training\n : IR-3 Incident Response Testing\n : IR-4 Incident Handling\n : IR-5 Incident Monitoring\n : IR-6 Incident Reporting\n : IR-7 Incident Response Assistance\n : IR-8 Incident Response Plan\n : IR-9 Information Spillage Response\n : SC-26 Decoys\n : SC-30 Concealment and Misdirection\n : SC-35 External Malicious Code Identification\n : SC-36 Distributed Processing and Storage\n : SC-37 Out-of-band Channels\n : SC-38 Operations Security\n : SC-42 Sensor Capability and Data\n : SC-43 Usage Restrictions\n : SC-46 Cross Domain Policy Enforcement\n : SC-47 Alternate Communications Paths\n : SC-48 Sensor Relocation\n : SC-50 Software-enforced Separation and Policy Enforcement\n : SI-2 Flaw Remediation"
  ISO 27001: "5.23: Information security for use of cloud services\n 5.24: Information security incident management planning and preparation\n 5.25: Assessment and decision on information security events\n 5.26: Response to information security incidents\n 5.27: Learning from information security incidents\n 5.28: Collection of evidence\n 5.37: Documented operating procedures\n 6.8: Information security event reporting\n 8.31: Separation of development, test and production environments\n 8.8: Management of technical vulnerabilities"
  Cloud Controls Matrix: "AIS-07: Application Vulnerability Remediation\n IVS-01: Infrastructure and Virtualization Security Policy and Procedures\n SEF: Security Incident Management, E-Discovery, & Cloud Forensics\n TVM: Threat & Vulnerability Management"
- SAMM Objective: 'O-EM-A: Configuration Hardening'
  SSDF: "PW.5.1: Follow all secure coding practices that are appropriate to the development languages and environment to meet the organization\u2019s requirements\n PW.9.1: Define a secure baseline by determining how to configure each setting that has an effect on security or a security-related setting so that the default settings are secure and do not weaken the security functions provided by the platform, network infrastructure, or services.\n PW.9.2: Implement the default settings (or groups of default settings, if applicable), and document each setting for software administrators."
  ASVS: "V12.6.1: Verify that the web or application server is configured with an allow list of resources or systems to which the server can send requests or load data/files from.\n V14.1.3: Verify that server configuration is hardened as per the recommendations of the application server and frameworks in use."
  NIST 800-53 v5 sections: ": CM-2 BASELINE CONFIGURATION\n : CM-6 Configuration Settings\n : SC-34 Non-modifiable Executable Programs"
  ISO 27001: .nan
  Cloud Controls Matrix: "AIS-06: Automated Secure Application Deployment\n DCS: Datacenter security"
- SAMM Objective: 'O-EM-B: Patching and Updating'
  SSDF: 'RV.1.1: Gather information from software acquirers, users, and public sources on potential vulnerabilities in the software and third-party components that the software uses, and investigate all credible reports.'
  ASVS: .nan
  NIST 800-53 v5 sections: ": PL-2 System Security and Privacy Plans\n : SC-25 Thin Nodes\n : SC-45 System Time Synchronization\n : SC-49 Hardware-enforced Separation and Policy Enforcement\n : SC-51 Hardware-based Protection\n : SI-8 Spam Protection"
  ISO 27001: "6.7: Remote working\n 8.17: Clock synchronization\n 8.19: Installation of software on operational systems\n 8.1: User end point devices"
  Cloud Controls Matrix: "DCS: Datacenter security\n UEM: Universal Endpoint Management"
- SAMM Objective: 'O-OM-A: Data Protection'
  SSDF: 'PO.1.2: Identify and document all security requirements for organization-developed software to meet, and maintain the requirements over time.'
  ASVS: "V1.8.1: Verify that all sensitive data is identified and classified into protection levels.\n V1.8.2: Verify that all protection levels have an associated set of protection requirements, such as encryption requirements, integrity requirements, retention, privacy and other confidentiality requirements, and that these are applied in the architecture.\n V8.3.4: Verify that all sensitive data created and processed by the application has been identified, and ensure that a policy is in place on how to deal with sensitive data.\n V8.3.8: Verify that sensitive personal information is subject to data retention classification, such that old or out of date data is deleted automatically, on a schedule, or as the situation requires."
  NIST 800-53 v5 sections: ": AC-14 PERMITTED ACTIONS WITHOUT IDENTIFICATION OR AUTHENTICATION\n : AC-16 Security and Privacy Attributes\n : AC-19 Access Control for Mobile Devices\n : AC-2 ACCOUNT MANAGEMENT\n : AC-24 Access Control Decisions\n : AC-25 Reference Monitor\n : AC-5 SEPARATION OF DUTIES\n : PM-17 Protecting Controlled Unclassified Information on External Systems\n : PM-23 Data Governance Body\n : PM-5 System Inventory\n : PM-7 Enterprise Architecture\n : SC-18 Mobile Code\n : SC-2 Separation of System and User Functionality\n : SI-12 Information Management and Retention"
  ISO 27001: "5.12: Classification of information\n 5.13: Labelling of information\n 5.14: Information transfer\n 5.32: Intellectual property rights\n 5.33: Protection of records\n 5.9: Inventory of information and other associated assets\n 8.1: Information deletion\n 8.26: Application security requirements"
  Cloud Controls Matrix: "AIS-02: Application Security Baseline Requirements\n GRC: Governance, Risk and Compliance"
- SAMM Objective: 'O-OM-B: System Decommissioning / Legacy Management'
  SSDF: "PO.1.3: Communicate requirements to all third parties who will provide commercial software components to the organization for reuse by the organization\u2019s own software. [Formerly PW.3.1]\n PW.4.1: Acquire and maintain well-secured software components (e.g., software libraries, modules, middleware, frameworks) from commercial, open- source, and other third-party developers for use by the organization\u2019s software.\n PW.4.4: Verify that acquired commercial, open-source, and all other third-party software components comply with the requirements, as defined by the organization, throughout their life cycles"
  ASVS: 'V1.1.1: Verify the use of a secure software development lifecycle that addresses security in all stages of development.'
  NIST 800-53 v5 sections: ": PM-30 Supply Chain Risk Management Strategy\n : SA-1 Policy and Procedures\n : SA-15 Development Process, Standards, and Tools\n : SA-22 Unsupported System Components\n : SA-3 System Development Life Cycle\n : SA-4 Acquisition Process\n : SA-8 Security and Privacy Engineering Principles\n : SA-9 External System Services\n : SI-3 Malicious Code Protection\n : SR-1 Policy and Procedures\n : SR-10 Inspection of Systems or Components\n : SR-11 Component Authenticity\n : SR-12 Component Disposal\n : SR-2 Supply Chain Risk Management Plan\n : SR-3 Supply Chain Controls and Processes\n : SR-4 Provenance\n : SR-5 Acquisition Strategies, Tools, and Methods\n : SR-6 Supplier Assessments and Reviews\n : SR-7 Supply Chain Operations Security\n : SR-8 Notification Agreements\n : SR-9 Tamper Resistance and Detection"
  ISO 27001: "5.19: Information security in supplier relationships\n 5.21: Managing information security in the information and communication technology (ICT) supply chain\n 5.22: Monitoring, review and change management of supplier services\n 5.23: Information security for use of cloud services\n 5.2: Addressing information security within supplier agreements\n 8.25: Secure development life cycle\n 8.3: Outsourced development"
  Cloud Controls Matrix: 'AIS-04: Secure Application Design and Development'
